[{"/Users/margarida/Desktop/team-two-instock/client/src/App.js":"1","/Users/margarida/Desktop/team-two-instock/client/src/pages/Home/Home.js":"2","/Users/margarida/Desktop/team-two-instock/client/src/components/AddInventoryItem/AddInventoryItem.js":"3"},{"size":1067,"mtime":1606268958494,"results":"4","hashOfConfig":"5"},{"size":117,"mtime":1606324234210,"results":"6","hashOfConfig":"5"},{"size":13226,"mtime":1606341568451,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pnf21p",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/margarida/Desktop/team-two-instock/client/src/App.js",[],"/Users/margarida/Desktop/team-two-instock/client/src/pages/Home/Home.js",[],"/Users/margarida/Desktop/team-two-instock/client/src/components/AddInventoryItem/AddInventoryItem.js",["15"],"import React from 'react';\nimport './AddInventoryItem.scss'\nimport axios from 'axios';\n\nimport backArrow from \"../../assets/icons/arrow_back-24px.svg\";\nimport errorIcon from \"../../assets/icons/error-24px.svg\";\n\nclass AddInventoryItem extends React.Component {\n    state = {\n        itemName: \"\",\n        itemDescription: \"\",\n        itemCategory: \"\",\n        itemStatus: \"In Stock\",\n        itemQuantity: \"0\",\n        itemWarehouse: \"\",\n        // should validation error be rendered or not\n        itemNameError: true,\n        itemDescriptionError: true,\n        itemCategoryError: true,\n        itemQuantityError: true,\n        itemWarehouseError: true\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleOptionChange = (e) => {\n        this.setState({\n            itemStatus: e.target.value\n        });\n    }\n\n    // includes checking for only spaces\n    checkForEmpty = (input) => {\n        let trimmedInput = input.trim();\n        return !!trimmedInput;\n    }\n\n    validateAll = () => {\n        const { itemName, itemDescription, itemCategory, itemStatus, itemQuantity, itemWarehouse } = this.state;\n\n        const isValid = {\n            name: true,\n            description: true,\n            category: true,\n            quantity: true,\n            warehouse: true\n        };\n\n        if (!this.checkForEmpty(itemName)) {\n            // console.log(\"name is empty\");\n            isValid.name = false;\n        }\n\n        if (!this.checkForEmpty(itemDescription)) {\n            // console.log(\"description is empty\");\n            isValid.description = false;\n        }\n\n        if (!this.checkForEmpty(itemCategory)) {\n            // console.log(\"category is empty\");\n            isValid.category = false;\n        }\n\n        if (itemStatus === \"In Stock\" && itemQuantity === \"0\") {\n            // console.log(\"if in stock add quantity\");\n            isValid.quantity = false;\n        }\n\n        if (!this.checkForEmpty(itemWarehouse)) {\n            // console.log(\"warehouse empty\");\n            isValid.warehouse = false;\n        }\n\n        if (isValid.name && isValid.description && isValid.category && isValid.quantity && isValid.warehouse) {\n            return true;\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { itemName, itemDescription, itemCategory, itemStatus, itemQuantity, itemWarehouse } = this.state;\n\n        if (this.validateAll()) {\n            const newItem = {\n                warehouseID: \"\", // I think this can be found and set in the back end\n                warehouseName: itemWarehouse,\n                itemName: itemName,\n                description: itemDescription,\n                category: itemCategory,\n                status: itemStatus,\n                quantity: itemQuantity\n            }\n            console.log(newItem);\n            // axios.post()\n            //     .then((response) => {\n            //         this.handleReset();\n            //     })\n            //     .catch((error) => console.log(error))\n        }\n    }\n\n    handleReset = () => {\n        this.setState({\n            itemName: \"\",\n            itemDescription: \"\",\n            itemCategory: \"\",\n            itemStatus: \"In Stock\",\n            itemQuantity: 0,\n            itemWarehouse: \"\"\n        });\n    }\n\n    renderSelectFieldOptions = (optionsArr) => {\n        optionsArr = optionsArr || [\"test1\", \"test2\"];\n        return optionsArr.map((option, i) => {\n            return <option key={i} value={option}>{option}</option>\n        });\n    }\n\n    renderQuantity = () => {\n        return (\n            <>\n                <label \n                    className=\"add-inventory-item__label\"   \n                    htmlFor=\"itemQuantity\">\n                        Quantity\n                </label>\n                <input \n                    className=\"add-inventory-item__text-input add-inventory-item__text-input--short\"\n                    onChange={this.handleChange}\n                    value={this.state.itemQuantity}\n                    name=\"itemQuantity\" \n                    id=\"itemQuantity\" \n                    type=\"number\"\n                    placeholder=\"0\"\n                />\n            </>\n        );\n    }\n\n    renderErrorMessage = () => {\n        return (\n            <>\n                <img className=\"add-inventory-item__error-icon\" src={errorIcon} alt=\"error message icon\" />\n                <span className=\"add-inventory-item__error-text\" >This field is required</span>\n            </>\n        );\n    }\n\n    render() {\n\n        return (\n            <div className=\"add-inventory-item\">\n                {/* HEADING STARTS */}\n                <div className=\"add-inventory-item__heading\">\n                    <img className=\"add-inventory-item__heading-icon\" src={backArrow} alt=\"Go back arrow\" />\n                    <h1 className=\"add-inventory-item__heading-text\">Add New Inventory Item</h1>\n                </div>\n                {/* FORM STARTS */}\n                <form \n                    className=\"add-inventory-item__form\" \n                    onSubmit={this.handleSubmit} \n                    onReset={this.handleReset}>\n                        {/* ITEM DETAILS SECTION */}\n                        <fieldset className=\"add-inventory-item__fieldset\">\n                            <legend className=\"add-inventory-item__legend add-inventory-item__legend--stretch\">Item Details</legend>\n                            <label \n                                className=\"add-inventory-item__label\" \n                                htmlFor=\"itemName\">\n                                    Item Name\n                            </label>\n                            <input \n                                className=\"add-inventory-item__text-input\" \n                                onChange={this.handleChange}\n                                value={this.state.itemName}\n                                name=\"itemName\" \n                                id=\"itemName\" \n                                type=\"text\"\n                                placeholder=\"Item Name\"\n                            />\n                            <div className=\"add-inventory-item__error\">\n                                {this.state.itemNameError && this.renderErrorMessage()}\n                            </div>\n                            <label \n                                className=\"add-inventory-item__label\" \n                                htmlFor=\"itemDescription\">\n                                    Description\n                            </label>\n                            <textarea\n                                className=\"add-inventory-item__text-input add-inventory-item__text-input--textarea\" \n                                onChange={this.handleChange}\n                                value={this.state.itemDescription}\n                                name=\"itemDescription\" \n                                id=\"itemDescription\" \n                                placeholder=\"Please enter a brief item description...\"\n                            />\n                            <div className=\"add-inventory-item__error\">\n                                {this.state.itemDescriptionError && this.renderErrorMessage()}\n                            </div>\n                            <label \n                                className=\"add-inventory-item__label\" \n                                htmlFor=\"itemCategory\">\n                                    Category\n                            </label>\n                            <select \n                                className=\"add-inventory-item__text-input add-inventory-item__text-input--select\"\n                                onChange={this.handleChange}\n                                value={this.state.itemCategory}\n                                name=\"itemCategory\" \n                                id=\"itemCategory\">\n                                    <option value=\"\">Please select</option>\n                                    {this.renderSelectFieldOptions(this.props.categories)}\n                            </select>\n                            <div className=\"add-inventory-item__error\">\n                                {this.state.itemCategoryError && this.renderErrorMessage()}\n                            </div>\n                        </fieldset>\n                        {/* ITEM AVAILABILITY SECTION */}\n                        <fieldset className=\"add-inventory-item__fieldset\">\n                            <legend className=\"add-inventory-item__legend\">Item Availability</legend>\n                            <fieldset className=\"add-inventory-item__radio\">\n                                <legend \n                                    className=\"add-inventory-item__label add-inventory-item__label--radio\">\n                                        Status\n                                </legend>\n                                <div className=\"add-inventory-item__radio-group\">\n                                    <input\n                                        className=\"add-inventory-item__radio-input\"\n                                        onChange={this.handleOptionChange}\n                                        value=\"In Stock\"\n                                        checked={this.state.itemStatus === \"In Stock\"}\n                                        name=\"itemStatus\"\n                                        id=\"itemStatus\"\n                                        type=\"radio\" />\n                                    <label\n                                        className={this.state.itemStatus === \"In Stock\" ? \"add-inventory-item__radio-label add-inventory-item__radio-label--checked\" : \"add-inventory-item__radio-label\"}\n                                        htmlFor=\"itemStatus\">\n                                            In stock\n                                    </label>\n                                </div>\n                                <div className=\"add-inventory-item__radio-group\">\n                                    <input \n                                        className=\"add-inventory-item__radio-input\" \n                                        onChange={this.handleOptionChange}\n                                        value=\"Out of Stock\"\n                                        checked={this.state.itemStatus === \"Out of Stock\"}\n                                        name=\"itemStatus\" \n                                        id=\"itemStatus\" \n                                        type=\"radio\" />\n                                    <label \n                                        className={this.state.itemStatus === \"Out of Stock\" ? \"add-inventory-item__radio-label add-inventory-item__radio-label--checked\" : \"add-inventory-item__radio-label\"}\n                                        htmlFor=\"itemStatus\">\n                                            Out of stock\n                                    </label>\n                                </div>\n                            </fieldset>\n                            {this.state.itemStatus === \"In Stock\" && this.renderQuantity()}\n                            <div className=\"add-inventory-item__error\">\n                                {this.state.itemQuantityError && this.renderErrorMessage()}\n                            </div>\n                            <label  \n                                className=\"add-inventory-item__label\" \n                                htmlFor=\"itemWarehouse\">\n                                    Warehouse\n                            </label>\n                            <select \n                                className=\"add-inventory-item__text-input add-inventory-item__text-input--select\"\n                                onChange={this.handleChange}\n                                value={this.state.itemWarehouse}\n                                name=\"itemWarehouse\" \n                                id=\"itemWarehouse\"\n                                >\n                                    <option value=\"\">Please select</option>\n                                    {this.renderSelectFieldOptions(this.props.warehouses)}\n                            </select>\n                            <div className=\"add-inventory-item__error\">\n                                {this.state.itemWarehouseError && this.renderErrorMessage()}\n                            </div>\n                        </fieldset>\n                        {/* BUTTONS */}\n                        <div className=\"add-inventory-item__button-group\">\n                            <button \n                                className=\"add-inventory-item__button add-inventory-item__button--secondary\"\n                                type=\"reset\">\n                                    Cancel\n                            </button>\n                            <button \n                                className=\"add-inventory-item__button\"\n                                type=\"submit\">\n                                    + Add Item\n                            </button>\n                        </div>\n                </form>\n            </div>\n        );\n    }\n};\n\nexport default AddInventoryItem;",{"ruleId":"16","severity":1,"message":"17","line":3,"column":8,"nodeType":"18","messageId":"19","endLine":3,"endColumn":13},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar"]